name: "12 --- [ Bootstrap AWS Account ]"

on:
  workflow_call:
    inputs:
      stage-env:
        type: string
        description: 'Staging environment (DEVELOP|PRODUCTION)'
        required: true

permissions:
  id-token: write
  contents: read

env:
  TARGET_ACCOUNT_ID: ${{ inputs[format('{0}_ACCOUNT_ID', inputs.stage-env)] || secrets[format('{0}_ACCOUNT_ID', inputs.stage-env)] }}

jobs:
  setup-github-deployer:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Create Github deployer IAM role
        uses: ./.github/actions/run-cfn-script
        with:
          script-file: ./aws-infra/01_iam/cfn_github_deployer.sh

  check-deployment-gate:
    runs-on: ubuntu-latest
    needs: [ setup-github-deployer ]
    outputs:
      gate-state: ${{ steps.check-gate.outputs.gate-state }}
    steps:
      - uses: actions/checkout@v5
      - name: Check deployment gate
        uses: ./.github/actions/check-deployment-gate
        id: check-gate
        with:
          gate-name: 'infrastructure'

  setup-deployment-gate:
    runs-on: ubuntu-latest
    needs: [ check-deployment-gate ]
    if: ${{ needs.check-deployment-gate.outputs.gate-state == 'open' }}
    steps:
      - uses: actions/checkout@v5
      - name: Setup DynamoDB table as deployment gate
        uses: ./.github/actions/run-cfn-script
        with:
          script-file: ./aws-infra/02_gates/cfn_deployment_gates.sh

  setup-secops:
    runs-on: ubuntu-latest
    needs: [ check-deployment-gate ]
    if: ${{ needs.check-deployment-gate.outputs.gate-state == 'open' }}
    steps:
      - uses: actions/checkout@v5
      - name: Setup CloudTrail
        uses: ./.github/actions/run-cfn-script
        with:
          script-file: ./aws-infra/03_secops/cfn_cloudtrail.sh

      - name: Setup CIS Alarms
        uses: ./.github/actions/run-cfn-script
        with:
          script-file: ./aws-infra/03_secops/cfn_cis_alarms.sh

  setup-network:
    runs-on: ubuntu-latest
    needs: [ check-deployment-gate ]
    if: ${{ needs.check-deployment-gate.outputs.gate-state == 'open' }}
    steps:
      - uses: actions/checkout@v5
      - name: Setup VPC
        uses: ./.github/actions/run-cfn-script
        with:
          script-file: ./aws-infra/04_network/cfn_vpc.sh

  setup-cluster:
    runs-on: ubuntu-latest
    needs: [ check-deployment-gate ]
    if: ${{ needs.check-deployment-gate.outputs.gate-state == 'open' }}
    steps:
      - uses: actions/checkout@v5
      - name: Setup ECS
        uses: ./.github/actions/run-cfn-script
        with:
          script-file: ./aws-infra/05_container/cfn_ecs_cluster.sh

